<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
            http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
            http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-3.1.xsd">
    
    <bean id="exceptionHandler" class="com.test.springmvc.Exception.SpringMvcExceptionHandler" />
    
    <!-- 扫描 DAO 和 Service 包，Controller 包在 SpringMVC 中扫描 -->
    <context:component-scan base-package="com.test.springmvc.DAOImpl, com.test.springmvc.ServiceImpl" />
    
    <!-- 定义DataSource -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url"  value="jdbc:mysql://localhost:3306/forum?characterEncoding=UTF-8" />
        <property name="username" value="root" />
        <property name="password" value="123456" />
    </bean>
    
    <!-- 定义SessionFactory -->
    <!-- 会话工厂 :session 工厂可以使用 SqlSessionFactoryBuilder 来创建。
           而在 MyBatis-spring中,则使用 SqlSessionFactoryBean 来替代 -->
    <bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:mybatis-config.xml" />
        <property name="mapperLocations" value="classpath:com/test/springmvc/Mapper/*.xml" />
    </bean>
    
    <!-- 事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    
    <!-- 配置事务的传播特性 -->
    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="insert*" propagation="REQUIRED" />
            <tx:method name="update*" propagation="REQUIRED" />
            <tx:method name="delete" propagation="REQUIRED" />
            <tx:method name="select*" propagation="SUPPORTS" />
        </tx:attributes>
    </tx:advice>
    
    <!-- 配置哪些类的哪些方法参与事务 -->
    <aop:config>
        <aop:pointcut id="serviceCut" expression="execution(public * Service.*.*(..))" />
        <aop:advisor pointcut-ref="serviceCut" advice-ref="transactionAdvice" />
    </aop:config>
    
    <!-- Spring 和 Mybatis 整合 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.test.springmvc.Mapper" />
        <property name="sqlSessionFactoryBeanName" ref="sessionFactory" />
    </bean>
</beans>

